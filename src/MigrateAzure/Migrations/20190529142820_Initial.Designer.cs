// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migrate;

namespace MigrateAzure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190529142820_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_group")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inclusion_date")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnName("observation")
                        .HasColumnType("varchar(512)");

                    b.HasKey("Id");

                    b.ToTable("tbl_group","authentication");
                });

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_permission")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inclusion_date")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_permission","authentication");
                });

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.PermissionGroup", b =>
                {
                    b.Property<Guid>("IdGroup")
                        .HasColumnName("id_group");

                    b.Property<Guid>("IdPermission")
                        .HasColumnName("id_permission");

                    b.HasKey("IdGroup", "IdPermission");

                    b.HasIndex("IdPermission");

                    b.ToTable("tbl_permission_group","authentication");
                });

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_user")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inclusion_date")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("deleted")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnName("hash")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("login")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Telephone")
                        .HasColumnName("telephone")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("tbl_user","authentication");
                });

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.UserGroup", b =>
                {
                    b.Property<Guid>("IdGroup")
                        .HasColumnName("id_group");

                    b.Property<Guid>("IdUser")
                        .HasColumnName("id_user");

                    b.HasKey("IdGroup", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("tbl_user_group","authentication");
                });

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.PermissionGroup", b =>
                {
                    b.HasOne("iPlantino.Domain.Models.Authentication.Group", "Group")
                        .WithMany("PermissionsGroup")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("fk_permission_group_group");

                    b.HasOne("iPlantino.Domain.Models.Authentication.Permission", "Permission")
                        .WithMany("PermissionGroup")
                        .HasForeignKey("IdPermission")
                        .HasConstraintName("fk_permission_group_permission");
                });

            modelBuilder.Entity("iPlantino.Domain.Models.Authentication.UserGroup", b =>
                {
                    b.HasOne("iPlantino.Domain.Models.Authentication.Group", "Group")
                        .WithMany("UsersGroup")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("fk_user_group_group");

                    b.HasOne("iPlantino.Domain.Models.Authentication.User", "User")
                        .WithMany("UsersGroup")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("fk_user_group_user");
                });
#pragma warning restore 612, 618
        }
    }
}
